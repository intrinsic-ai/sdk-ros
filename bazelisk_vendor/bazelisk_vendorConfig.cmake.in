@PACKAGE_INIT@

# Set the variables for the various binaries.
set_and_check(bazelisk_vendor_LIBEXECDIR "@PACKAGE_LIBEXEC_DIR@")
set(bazelisk_vendor_EXECUTABLE_LINUX_AMD64 "${bazelisk_vendor_LIBEXECDIR}/bazelisk-linux-amd64")
set(bazelisk_vendor_EXECUTABLE_LINUX_ARM64 "${bazelisk_vendor_LIBEXECDIR}/bazelisk-linux-arm64")

# Determine the correct binary.
function(_bazelisk_vendor_determine_host_binary OUTPUT_VAR)
  set(architecture_suffix "")
  if(CMAKE_HOST_SYSTEM_PROCESSOR STREQUAL "x86_64")
    set(architecture_suffix "amd64")
  elseif(CMAKE_HOST_SYSTEM_PROCESSOR STREQUAL "arm")
    set(architecture_suffix "arm64")
  else()
    message(FATAL_ERROR "Host processor type '${CMAKE_HOST_SYSTEM_PROCESSOR}' is not supported.")
  endif()

  if(CMAKE_HOST_SYSTEM_NAME STREQUAL Linux)
    set(${OUTPUT_VAR} "bazelisk-linux-${architecture_suffix}" PARENT_SCOPE)
  elseif(CMAKE_HOST_SYSTEM_NAME STREQUAL Windows)
    message(FATAL_ERROR "Host system type '${CMAKE_HOST_SYSTEM_NAME}' is not supported.")
  elseif(CMAKE_HOST_SYSTEM_NAME STREQUAL Darwin)
    message(FATAL_ERROR "Host system type '${CMAKE_HOST_SYSTEM_NAME}' is not supported.")
  else()
    message(FATAL_ERROR "Host system type '${CMAKE_HOST_SYSTEM_NAME}' is not supported.")
  endif()
endfunction()

_bazelisk_vendor_determine_host_binary(_BAZELISK_VENDOR_HOST_EXECUTABLE)
set(bazelisk_vendor_EXECUTABLE "${bazelisk_vendor_LIBEXECDIR}/${_BAZELISK_VENDOR_HOST_EXECUTABLE}")
unset(_BAZELISK_VENDOR_HOST_EXECUTABLE)
