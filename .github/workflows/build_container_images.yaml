name: Build intrinsic_sdk_cmake container images
run-name: ${{ github.actor }}'s changes have triggered a build of the sdk container images.
on: [workflow_call]
jobs:
  build-container-images:
    runs-on: ubuntu-latest
    services:
      # This local container registry is used to temporarily hold intermediate
      # docker images until they can be tested without pushing to the remote
      # container registry on ghcr.io.
      registry:
        image: registry:2
        ports:
          - 5000:5000
    outputs:
      intrinsic_ai_sdk_version: ${{ steps.intrinsic_ai_sdk_version.outputs.version }}
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      # Free up disk space
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be  # v1.3.1
        with:
          tool-cache: verbose_failures
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false

      # Checkout.
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Extract the intrinsic sdk version being used.
      - name: Get intrinsic-ai/sdk Version
        run: echo "INTRINSIC_AI_SDK_VERSION=$(cat intrinsic_sdk_cmake/cmake/sdk_version.json | jq -r '.sdk_version')" >> $GITHUB_ENV
      - run: echo "The Intrinsic SDK version being used is ${{ env.INTRINSIC_AI_SDK_VERSION }}"
      - id: intrinsic_ai_sdk_version
        run: echo "version=${{ env.INTRINSIC_AI_SDK_VERSION }}" >> "$GITHUB_OUTPUT"

      # TODO(wjwwood): use ccache (and apt and bazel caches) when buildkit supports persisting
      # cache type mounts: https://github.com/moby/buildkit/issues/1512
      # Consider using something like: https://github.com/dashevo/gh-action-cache-buildkit-state
      # Or this: https://github.com/reproducible-containers/buildkit-cache-dance
      # # Set up ccache.
      # - name: ccache
      #   uses: hendrikmuhs/ccache-action@v1.2

      # Set up buildx.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # This is needed in order to let buildx push to the local repository.
          driver-opts: network=host

      # Build the base, normal, and run images.
      # They are tagged and pushed into the local container registry service so
      # subsequent images can use them to build, and they are output to tar
      # files so they can be uploaded as artifacts at the end.
      - name: Build intrinsic_sdk_cmake_base Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: intrinsic_sdk_cmake/docker_images/intrinsic_sdk_cmake_base.Dockerfile
          push: true
          # TODO(wjwwood): The cache for gha (GitHub Actions) is limited,
          # consider trying the registry cache type that caches to an image, see:
          # https://www.blacksmith.sh/blog/cache-is-king-a-guide-for-docker-layer-caching-in-github-actions
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=${{ runner.temp }}/intrinsic_sdk_cmake_base.tar
          tags: |
            localhost:5000/intrinsic_sdk_cmake_base:temp
      - name: Build intrinsic_sdk_cmake Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: intrinsic_sdk_cmake/docker_images/intrinsic_sdk_cmake.Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=${{ runner.temp }}/intrinsic_sdk_cmake.tar
          build-args: |
            REPOSITORY=localhost:5000
            TAG=temp
          tags: |
            localhost:5000/intrinsic_sdk_cmake:temp
      - name: Build intrinsic_sdk_cmake_run Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: intrinsic_sdk_cmake/docker_images/intrinsic_sdk_cmake_run.Dockerfile
          # No push for the last one since there is no subsequent image that needs it.
          # push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=${{ runner.temp }}/intrinsic_sdk_cmake_run.tar
          build-args: |
            REPOSITORY=localhost:5000
            TAG=temp
          tags: |
            localhost:5000/intrinsic_sdk_cmake_run:temp

      # Upload images as temporary build artifacts for use in other jobs.
      - name: Upload intrinsic_sdk_cmake_base image
        uses: actions/upload-artifact@v4
        with:
          name: intrinsic_sdk_cmake_base_image
          path: ${{ runner.temp }}/intrinsic_sdk_cmake_base.tar
          retention-days: "1"
      - name: Upload intrinsic_sdk_cmake image
        uses: actions/upload-artifact@v4
        with:
          name: intrinsic_sdk_cmake_image
          path: ${{ runner.temp }}/intrinsic_sdk_cmake.tar
          retention-days: "1"
      - name: Upload intrinsic_sdk_cmake_run image
        uses: actions/upload-artifact@v4
        with:
          name: intrinsic_sdk_cmake_run_image
          path: ${{ runner.temp }}/intrinsic_sdk_cmake_run.tar
          retention-days: "1"

      - run: echo "üçè This job's status is ${{ job.status }}."
